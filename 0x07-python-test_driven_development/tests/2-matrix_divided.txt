The ``matrix_divided`` module
-----------------------------

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ...    [3, 6, 9],
    ...    [12, 15, 18]]
    >>> print(matrix_divided(matrix, 3))
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Check:

    >>> matrix = [[1, 2, 3], [4, 5, 6]]

    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

The original matrix is left unchanged.

Check:

    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

The function can also handle floating-point numbers.

Check:

    >>> matrix = [[2.4, -3.6, 4.8], [-3.2, 4.4, 6.8]]

    >>> print(matrix_divided(matrix, 2))
    [[1.2, -1.8, 2.4], [-1.6, 2.2, 3.4]]

Integers and floats can be combined.

Check:

    >>> matrix = [[1, -2.4, 3], [4.6, 5, 6.99]]

    >>> print(matrix_divided(matrix, 3))
    [[0.33, -0.8, 1.0], [1.53, 1.67, 2.33]]

False matrices
-----------------
Check:

    >>> matrix = "C is fun"

    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check:

    >>> matrix = None

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check:

    >>> matrix = [5, 6, 7]

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check:

    >>> matrix = [[1, 2, 3, 4], [5, 6, 7]]

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Check:

    >>> matrix = [[1, 2, 3], ["Abs", 4, 5]]

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check:

    >>> matrix = []

    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

False Division
--------------
Check:

    >>> matrix = [[1, 2, 3], [4, 5, 6]]

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Check:

    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    TypeError: div must be a number

Check: 

    >>> print(matrix_divided(matrix, "C is fun"))
    Traceback (most recent call last):
    TypeError: div must be a number

